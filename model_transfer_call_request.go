/*
 * Telnyx API
 *
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * API version: 2.0.0
 * Contact: support@telnyx.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package github.com/WunderkindNYC/telnyx-go

type TransferCallRequest struct {
	// The DID or SIP URI to dial out and bridge to the given call.
	To string `json:"to"`
	// The `from` number to be used as the caller id presented to the destination (`to` number). The number should be in +E164 format. This attribute will default to the `from` number of the original call if omitted.
	From string `json:"from,omitempty"`
	// The URL of a file to be played back to the callee before bridging the call. The URL can point to either a WAV or MP3 file.
	AudioUrl string `json:"audio_url,omitempty"`
	// The number of seconds that Telnyx will wait for the call to be answered by the destination to which it is being transferred. If the timeout is reached before an answer is received, the call will hangup and a `call.hangup` webhook with a `hangup_cause` of `timeout` will be sent. Minimum value is 5 seconds. Maximum value is 120 seconds.
	TimeoutSecs int32 `json:"timeout_secs,omitempty"`
	// Sets the maximum duration of a Call Control Leg in seconds. If the time limit is reached, the call will hangup and a `call.hangup` webhook with a `hangup_cause` of `time_limit` will be sent. For example, by setting a time limit of 120 seconds, a Call Leg will be automatically terminated two minutes after being answered. The default time limit is 14400 seconds or 4 hours and this is also the maximum allowed call length.
	TimeLimitSecs int32 `json:"time_limit_secs,omitempty"`
	// Enables Answering Machine Detection. When a call is answered, Telnyx runs real-time detection to determine if it was picked up by a human or a machine and sends an `call.machine.detection.ended` webhook with the analysis result. If 'greeting_end' or 'detect_words' is used and a 'machine' is detected, you will receive another 'call.machine.greeting.ended' webhook when the answering machine greeting ends with a beep or silence. If `detect_beep` is used, you will only receive 'call.machine.greeting.ended' if a beep is detected.
	AnsweringMachineDetection string `json:"answering_machine_detection,omitempty"`
	AnsweringMachineDetectionConfig *CallsAnsweringMachineDetectionConfig `json:"answering_machine_detection_config,omitempty"`
	// Custom headers to be added to the SIP INVITE.
	CustomHeaders []CustomSipHeader `json:"custom_headers,omitempty"`
	// Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.
	ClientState string `json:"client_state,omitempty"`
	// Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.
	CommandId string `json:"command_id,omitempty"`
	// SIP Authentication username used for SIP challenges.
	SipAuthUsername string `json:"sip_auth_username,omitempty"`
	// SIP Authentication password used for SIP challenges.
	SipAuthPassword string `json:"sip_auth_password,omitempty"`
}
